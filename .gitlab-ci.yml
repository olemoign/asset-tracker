stages:
  - test
  - build
  - dist
  - release
  - deploy

variables:
  CONTAINER_TEST_IMAGE: "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"
  CONTAINER_RELEASE_IMAGE: "$CI_REGISTRY_IMAGE:latest"
  GITLAB_INDEX_URL: "https://gitlab-ci-token:$CI_JOB_TOKEN@tracker.parsys.com/api/v4/projects/9/packages/pypi/simple"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

.production_version:
  rules:
    - if: "$CI_COMMIT_TAG =~ /^\\d+\\.\\d+\\.\\d+$/"

flake8:
  stage: test
  interruptible: true
  image: python:3.12
  tags:
    - docker
  cache:
    key: $CI_PROJECT_ID
    paths:
      - .cache/pip
  script:
    - pip3 install -q --extra-index-url $GITLAB_INDEX_URL '.[qa]'
    - flake8

pytest:
  stage: test
  interruptible: true
  image: python:3.12
  tags:
    - docker
  cache:
    key: $CI_PROJECT_ID
    paths:
      - .cache/pip
    policy: pull
  script:
    - pip3 install -q --extra-index-url $GITLAB_INDEX_URL '.[tests]'
    - pytest -n logical --cov=asset_tracker --junitxml=report.xml
  artifacts:
    when: always
    reports:
      junit: report.xml

build:
  stage: build
  image: python:3.12
  interruptible: true
  tags:
    - docker
  cache:
    key: $CI_PROJECT_ID
    paths:
      - .cache/pip
    policy: pull
  script:
    - pip3 install -q build
    - python3 -m build --wheel
    - pip3 wheel -w dist/ --extra-index-url $GITLAB_INDEX_URL .
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    expire_in: 6 hours
    paths:
      - dist/

docker-image:
  stage: dist
  interruptible: true
  tags:
    - shell
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $CONTAINER_TEST_IMAGE .

release-image:
  stage: release
  tags:
    - shell
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $CONTAINER_TEST_IMAGE

release-latest-image:
  stage: release
  tags:
    - shell
  rules:
    - !reference [ .production_version, rules ]
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE

deploy_dev:
  stage: deploy
  tags:
    - shell
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
  script:
    - ssh root@at.dev.parsys.com parsys upgrade at.dev.parsys.com
  environment:
    name: dev
    url: https://at.dev.parsys.com

deploy_staging:
  stage: deploy
  tags:
    - shell
  rules:
    - !reference [ .production_version, rules ]
  script:
    - ssh root@at.cloud.staging.parsys.com parsys upgrade at.cloud.staging.parsys.com
  environment:
    name: staging
    url: https://at.cloud.staging.parsys.com

deploy_staging_marlink:
  stage: deploy
  tags:
    - shell
  rules:
    - !reference [ .production_version, rules ]
  script:
    - ssh root@asset.pp.telemed.marlink.com parsys upgrade asset.pp.telemed.marlink.com
  environment:
    name: staging_marlink
    url: https://asset.pp.telemed.marlink.com
