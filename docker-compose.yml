version: "3.8"

services:
  web:
    image: tracker.parsys.com:1337/parsys/asset_tracker
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/srv
    healthcheck:
      test: ["CMD", "parsys_healthcheck"]
      start_period: 30s
    restart: always

  celery:
    image: tracker.parsys.com:1337/parsys/asset_tracker
    entrypoint: ["docker-entrypoint.sh", "--celery"]
    command: [
      "celery", "-A", "asset_tracker", "worker", "--ini", "/srv/production.ini", "--logfile=/srv/log/celery/celery.log",
      "--loglevel=info"
    ]
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/srv
    healthcheck:
      test: ["CMD", "celery", "-A", "asset_tracker", "inspect", "ping", "--ini", "/srv/production.ini"]
      start_period: 30s
    restart: always

  celery_beat:
    image: tracker.parsys.com:1337/parsys/asset_tracker
    entrypoint: ["docker-entrypoint.sh", "--celery"]
    command: [
      "celery", "-A", "asset_tracker", "beat", "--ini", "/srv/production.ini", "--logfile=/srv/log/celery/celery.log",
      "--loglevel=info"
    ]
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/srv
    healthcheck:
      test: ["CMD", "celery", "-A", "asset_tracker", "inspect", "ping", "--ini", "/srv/production.ini"]
      start_period: 30s
    restart: always

  postgres:
    image: postgres:12.1
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "postgres", "-U", "postgres"]
      timeout: 5s
      start_period: 10s
    restart: always

  redis:
    image: redis:5
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - ./data/redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 5s
      start_period: 10s
    restart: always
